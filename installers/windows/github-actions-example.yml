# GitHub Actions Workflow for Windows Installers
# Place this in .github/workflows/build-windows-installers.yml

name: Build Windows Installers

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    strategy:
      matrix:
        architecture: [x64, x86, arm64]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Setup WiX Toolset
      run: |
        # Install WiX via chocolatey
        choco install wixtoolset -y
        # Add to PATH for this session
        $env:PATH += ";C:\Program Files (x86)\WiX Toolset v3.11\bin"
        echo "WiX PATH: $env:PATH"
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build Windows Installers
      run: |
        cd installers/windows
        .\Build.ps1 -Architecture ${{ matrix.architecture }} -Type all
      shell: powershell
    
    - name: Test Installation (MSI)
      run: |
        # Install the MSI
        $msiFile = Get-ChildItem "dist/windows/msi/Timekeeper-*-${{ matrix.architecture }}.msi" | Select-Object -First 1
        if ($msiFile) {
          Start-Process -FilePath "msiexec.exe" -ArgumentList "/i", $msiFile.FullName, "/quiet" -Wait
          
          # Test installation
          cd installers/windows
          .\scripts\Test-Installation.ps1 -Silent
          
          # Uninstall
          .\scripts\Uninstall-Timekeeper.ps1 -Force
        }
      shell: powershell
    
    - name: Upload MSI Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: timekeeper-msi-${{ matrix.architecture }}
        path: dist/windows/msi/*.msi
    
    - name: Upload Portable Artifacts  
      uses: actions/upload-artifact@v4
      with:
        name: timekeeper-portable-${{ matrix.architecture }}
        path: dist/windows/portable/*.zip
  
  create-release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*.msi
          artifacts/**/*.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
